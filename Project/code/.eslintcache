[{"D:\\Software-group\\Project\\code\\src\\index.js":"1","D:\\Software-group\\Project\\code\\src\\App.js":"2","D:\\Software-group\\Project\\code\\src\\reportWebVitals.js":"3","D:\\Software-group\\Project\\code\\src\\Pages\\admin\\index.js":"4"},{"size":500,"mtime":1607434684000,"results":"5","hashOfConfig":"6"},{"size":225,"mtime":1608211244872,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1607434684000,"results":"8","hashOfConfig":"6"},{"size":5847,"mtime":1608194449535,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"ngsinz",{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"D:\\Software-group\\Project\\code\\src\\index.js",[],["21","22"],"D:\\Software-group\\Project\\code\\src\\App.js",["23"],"import logo from './logo.svg';\nimport './App.css';\nimport Admin from './Pages/admin'\nimport 'antd/dist/antd.css'; \nfunction App() {\n  return (\n    <div className=\"App\">\n       <Admin />\n    </div>\n  );\n}\n\nexport default App;\n","D:\\Software-group\\Project\\code\\src\\reportWebVitals.js",[],"D:\\Software-group\\Project\\code\\src\\Pages\\admin\\index.js",["24","25","26","27","28","29","30"],"import { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport \"./index.css\"\r\nimport { Button, Input, Table, Modal, Space, message } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\n\r\nconst { confirm } = Modal;\r\nconst { Column } = Table;\r\n\r\n// 用户查询接口\r\nconst fetchUser = function (query) {\r\n  return new Promise((resolve, reject) => {\r\n    axios(`http://localhost:8888/api/user?name=${query}`).then(result => {\r\n      resolve(result.data)\r\n    })\r\n  })\r\n}\r\n// 用户删除接口\r\nconst delUser = function (id) {\r\n  return new Promise((resolve, reject) => {\r\n    axios.post(`http://localhost:8888/api/user/del`, { id }).then(result => {\r\n      resolve(result.data)\r\n    })\r\n  })\r\n}\r\n// 文章查询接口\r\nconst fetchArticle = function (query) {\r\n  return new Promise((resolve, reject) => {\r\n    axios(`http://localhost:8888/api/article?title=${query}`).then(result => {\r\n      resolve(result.data)\r\n    })\r\n  })\r\n}\r\n// 文章删除接口\r\nconst delArticle = function (id) {\r\n  return new Promise((resolve, reject) => {\r\n    axios.post(`http://localhost:8888/api/article/del`, { id }).then(result => {\r\n      resolve(result.data)\r\n    })\r\n  })\r\n}\r\n\r\nconst Index = () => {\r\n  let [urlIdx, setUrlIdx] = useState(\"user\")\r\n  let [date, setDate] = useState(new Date().toLocaleString())\r\n  let [data, setData] = useState([])\r\n  let [query, setQuery] = useState('')\r\n  let [search, setSearch] = useState('')\r\n  useEffect(() => {\r\n    if (window.location.pathname.includes(\"user\")) {\r\n      fetchUser(query).then(res => setData(res))\r\n    } else if (window.location.pathname.includes(\"wz\")) {\r\n      fetchArticle(query).then(res => setData(res))\r\n    }\r\n  }, [search])\r\n  useEffect(() => {\r\n    if (window.location.pathname.includes(\"user\")) {\r\n      setUrlIdx(\"user\")\r\n    } else if (window.location.pathname.includes(\"wz\")) {\r\n      setUrlIdx(\"wz\")\r\n    }\r\n  }, [window.location.pathname])\r\n\r\n  let showDeleteConfirm = (uid) => {\r\n    confirm({\r\n      title: '确定删除吗?',\r\n      icon: <ExclamationCircleOutlined />,\r\n      content: '',\r\n      okText: 'Yes',\r\n      okType: 'danger',\r\n      cancelText: 'No',\r\n      onOk() {\r\n        if (window.location.pathname.includes(\"user\")) {\r\n          delUser(uid).then(_ => {\r\n            message.success('删除成功！');\r\n            fetchUser(query).then(res => setData(res))\r\n          })\r\n        } else if (window.location.pathname.includes(\"wz\")) {\r\n          delArticle(uid).then(_ => {\r\n            message.success('删除成功！');\r\n            fetchArticle(query).then(res => setData(res))\r\n          })\r\n        }\r\n      },\r\n      onCancel() {\r\n        console.log('Cancel');\r\n      },\r\n    });\r\n  }\r\n\r\n  let time = null;\r\n  useEffect(() => {\r\n    clearInterval(time)\r\n    let date;\r\n    date = new Date().toLocaleString();\r\n    setDate(date)\r\n    time = setInterval(() => {\r\n      date = new Date().toLocaleString();\r\n      setDate(date)\r\n    }, 1000);\r\n    return () => {\r\n      clearInterval(time)\r\n      time = null;\r\n      console.log(\"卸载\")\r\n    }\r\n  }, [])\r\n\r\n\r\n  let setUrl = (url) => {\r\n    if (url == urlIdx) {\r\n      return\r\n    }\r\n    window.location = `/${url}`\r\n  }\r\n\r\n\r\n  var tableElement\r\n  if (window.location.pathname.includes(\"user\")) {\r\n    tableElement = <Table dataSource={data}>\r\n      <Column title=\"id\" dataIndex=\"uid\" key=\"uid\" />\r\n      <Column title=\"用户名\" dataIndex=\"username\" key=\"username\" />\r\n      <Column title=\"密码\" dataIndex=\"passwd\" key=\"passwd\" />\r\n      <Column title=\"创建时间\" dataIndex=\"ctime\" key=\"ctime\" />\r\n      <Column title=\"role\" dataIndex=\"role\" key=\"role\" />\r\n      <Column\r\n        title=\"Action\"\r\n        key=\"action\"\r\n        render={(text, record) => (\r\n          <Space size=\"middle\">\r\n            <Button danger onClick={() => showDeleteConfirm(record.uid)}>删除</Button>\r\n          </Space>\r\n        )}\r\n      />\r\n    </Table>\r\n  } else if (window.location.pathname.includes(\"wz\")) {\r\n    tableElement = <Table dataSource={data}>\r\n      <Column title=\"id\" dataIndex=\"textid\" key=\"textid\" />\r\n      <Column title=\"用户名(编写人)\" dataIndex=\"username\" key=\"username\" />\r\n      <Column width=\"250px\" title=\"文章标题\" dataIndex=\"title\" key=\"title\" />\r\n      <Column title=\"类型\" dataIndex=\"type\" key=\"type\" />\r\n      <Column width=\"500px\" title=\"文章内容\" dataIndex=\"text\" key=\"text\" />\r\n      <Column width=\"180px\" title=\"创建时间\" dataIndex=\"ctime\" key=\"ctime\" />\r\n      <Column\r\n        title=\"Action\"\r\n        key=\"action\"\r\n        render={(text, record) => (\r\n          <Space size=\"middle\">\r\n            <Button danger onClick={() => showDeleteConfirm(record.textid)}>删除</Button>\r\n          </Space>\r\n        )}\r\n      />\r\n    </Table>\r\n  }\r\n\r\n  return (\r\n    <div className=\"index\">\r\n      <div className=\"index_head\">\r\n        <div className=\"index_head_title\">后台管理系统</div>\r\n        <div className=\"index_head_time\">{date}</div>\r\n        <div className=\"index_head_btn\">\r\n          <Button type=\"primary\" onClick={() => alert(\"sure\")}>退出</Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"index_left\">\r\n        <div className={`index_left_title ${urlIdx == \"user\" ? \"active\" : \"\"}`} onClick={() => setUrl(\"user\")}>用户信息管理</div>\r\n        <div className={`index_left_title ${urlIdx == \"wz\" ? \"active\" : \"\"}`} onClick={() => setUrl(\"wz\")}>文章管理</div>\r\n      </div>\r\n      <div className=\"index_right\">\r\n        <div className=\"index_right_head\">\r\n          搜索  <Input value={query} placeholder=\"请输入搜索内容\" onChange={e => setQuery(e.target.value)} /> <Button type=\"primary\" onClick={() => setSearch(query)}>确定</Button>\r\n        </div>\r\n        <div className=\"index_right_content\">{tableElement}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Index",{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":1,"column":8,"nodeType":"37","messageId":"38","endLine":1,"endColumn":12},{"ruleId":"35","severity":1,"message":"39","line":1,"column":31,"nodeType":"37","messageId":"38","endLine":1,"endColumn":37},{"ruleId":"40","severity":1,"message":"41","line":55,"column":6,"nodeType":"42","endLine":55,"endColumn":14,"suggestions":"43"},{"ruleId":"40","severity":1,"message":"44","line":62,"column":6,"nodeType":"42","endLine":62,"endColumn":32,"suggestions":"45"},{"ruleId":"40","severity":1,"message":"46","line":97,"column":12,"nodeType":"47","endLine":100,"endColumn":13},{"ruleId":"48","severity":1,"message":"49","line":110,"column":13,"nodeType":"50","messageId":"51","endLine":110,"endColumn":15},{"ruleId":"48","severity":1,"message":"49","line":165,"column":52,"nodeType":"50","messageId":"51","endLine":165,"endColumn":54},{"ruleId":"48","severity":1,"message":"49","line":166,"column":52,"nodeType":"50","messageId":"51","endLine":166,"endColumn":54},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'query'. Either include it or remove the dependency array.","ArrayExpression",["54"],"React Hook useEffect has an unnecessary dependency: 'window.location.pathname'. Either exclude it or remove the dependency array. Outer scope values like 'window.location.pathname' aren't valid dependencies because mutating them doesn't re-render the component.",["55"],"Assignments to the 'time' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"56","fix":"57"},{"desc":"58","fix":"59"},"Update the dependencies array to be: [query, search]",{"range":"60","text":"61"},"Update the dependencies array to be: []",{"range":"62","text":"63"},[1668,1676],"[query, search]",[1873,1899],"[]"]